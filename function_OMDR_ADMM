
function[S,A,V,U,PI,Lamb,M,N]=OMDR_ADMM(X,S0,V0,U0,PI0,Lamb0,M0,N0,R,rho,alpha,mu,N1,N2)

% Inputs:

% X: one slice of the hyperspectral image
% S0: initial endmembers
% A0: initial abundances
% V0, U0: initial auxiliary variables
% PI0, Lamb0: initial dual variables
% M0, N0: initial matrices (expressions (21) and (22))
% R: number of endmembers (rank)
% rho:  convergence rate parameter
% alpha: weighting coefficient (tracking capability)
% mu: regularization parameter
% N1, N2: outer and inner loop iterations

% Outputs:

% S, V, U, PI, Lamb, M, N

S = S0;
V = V0; U = U0;
PI = PI0; Lamb = Lamb0;

D = eye(R,R)-(1/R)*ones(1,R)'*ones(1,R);

for t1 = 1:N1
    
E = [(1 - alpha)*(S'*S) + rho*eye(R,R), ones(R,1);ones(1,R),0];
inverse_E = inv(E);

    for t2=1:N2
    
    AA = inverse_E*[((1 - alpha)*(S'*X) + rho*(V - PI));ones(1,size(V,2))];
    A = AA(1:R,:);
    V = max(0, A + PI);
    PI = PI + A - V;

    end

N = alpha*N0 + (1 - alpha)*X*A';
M = alpha*M0 + (1 - alpha)*A*A';
S = (N + rho*(U - Lamb))*inv(M + rho*eye(R,R) + 2*mu*D*eye(R,R));
U = max(0, S + Lamb);
Lamb = Lamb + S - U;

end


